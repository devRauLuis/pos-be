// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Client {
    id String @id @map("_id") @db.ObjectId
    address String?
    cardCode Int
    visits Int @default(0)
    points Int @default(0)
    phone String?
    email String @unique
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    active Boolean @default(true)
    role String
    order Order[]

}

model User {
     id String @id @map("_id") @db.ObjectId
     address String?
     cardCode Int
     visits Int @default(0)
     points Int @default(0)
     phone String?
     email String @unique
     createdAt DateTime @default(now())
     updatedAt DateTime @updatedAt
     active Boolean @default(true)
     role String
     order Order[]
 }

 model Product {
     id String @id @map("_id") @db.ObjectId
     name String
     price Int
     category String
     img String
     createdAt DateTime? @default(now())
     updatedAt DateTime? @updatedAt
     createdBy String?
     deleted Boolean
     objectID String?
     code String?
     count Int?
     order Order @relation(fields: [orderId], references: [id])
     orderId String @db.ObjectId 
 }

 model CardInfo {
     id String @id @map("_id") @db.ObjectId
     last4Digits String
     nameOnCard String
     order Order[]
 }
 model Order {
    id String @id @map("_id") @db.ObjectId
    products Product[]
    user User @relation(fields: [userId], references: [id])
    userId String @db.ObjectId
    client Client @relation(fields: [clientId], references: [id])
    clientId String @db.ObjectId
    taxes Int
    subTotal Int
    total Int
    createdAt DateTime
    payment String
    cardInfo CardInfo? @relation(fields: [cardInfoId], references: [id])
    cardInfoId String @db.ObjectId
    status String
 }

